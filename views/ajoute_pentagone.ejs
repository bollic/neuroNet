<%- include('layout/header') %>
 <!-- Code de la carte Leaflet -->
 <script defer>
  document.addEventListener("DOMContentLoaded", function() {
    // Initialiser la carte avec Leaflet
    let map = L.map("map", { center: [46.2, 2.9], zoom: 5 });
    let layerGroup = L.featureGroup().addTo(map);
   let cinqueArticles=[];
   let selectedCoordinates = []; // Array per memorizzare le coordinate dei 5 punti

    // Ajouter le fond de carte
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", { 
      preload: true,
      maxZoom: 19,
      formatData: "webp",
      attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    // Ajouter un événement de clic sur la carte pour afficher les coordonnées
    let myLocation = L.layerGroup().addTo(map);
   // map.addEventListener("click", mapClick);

   
let popup = L.popup();
function onMapClick(e) {
    popup
        .setLatLng(e.latlng)
        .setContent(
            "You clicked the map at -<br>" + 
            "<b>lon:</b> " + e.latlng.lng + "<br>" + 
            "<b>lat:</b> " + e.latlng.lat
        )
        .openOn(map);
}
map.addEventListener("click", onMapClick);

 // Listener per il clic sulla mappa
map.addEventListener("click", function(e) {
  if (selectedCoordinates.length < 5) {
    // Aggiungi un marker sulla mappa
    L.marker(e.latlng).addTo(myLocation);

    // Memorizza le coordinate selezionate
    selectedCoordinates.push(e.latlng);
        // Aggiorna i campi nascosti per ogni articolo (latitudine e longitudine)
        const pointIndex = selectedCoordinates.length - 1;
   // Aggiorna i valori dei campi hidden per latitudine e longitudine per l'articolo corrente
   document.getElementById(`latitudeSelectioneeInput_${pointIndex}`).value = e.latlng.lat;
    document.getElementById(`longitudeSelectioneeInput_${pointIndex}`).value = e.latlng.lng;
     // Aggiorna i valori degli input nascosti con le coordinate selezionate
   // latInput.value = e.latlng.lat;
 //   lngInput.value = e.latlng.lng;

    // Aggiorna i campi nascosti con le coordinate selezionate
    document.getElementById('latitudeSelectionee').textContent = 
      selectedCoordinates.map(coord => coord.lat).join(', ');
    document.getElementById('longitudeSelectionee').textContent = 
      selectedCoordinates.map(coord => coord.lng).join(', ');
  } else {
    alert("Hai già selezionato 5 punti!");
  }
});


    const allMarker = document.getElementById("get-marker");
    allMarker.addEventListener("click", async () => {
      console.log("All marker clicked");
      layerGroup.clearLayers();
    });

 // Funzione per verificare il numero di articoli già presenti
        async function checkMaxArticles() {
            const response = await fetch('/api/check-articles'); // Percorso per verificare il numero di articoli
            const data = await response.json();

            if (data.count >= 5) {
                alert("Puoi aggiungere solo 5 articoli.");
                return false;
            }
            return true;
        }


 const form = document.getElementById("add-pentagone");
 form.addEventListener("submit", async (e) => {
  e.preventDefault();

  // Verifica se ci sono punti selezionati
  if (selectedCoordinates.length === 0) {
    alert("Seleziona almeno un punto sulla mappa!");
    return;
  }

  // Verifica se ci sono abbastanza coordinate per il nuovo articolo
  if (cinqueArticles.length >= 5 || selectedCoordinates.length < 5 - cinqueArticles.length) {
    alert("Puoi aggiungere al massimo 5 articoli con coordinate valide!");
    return;
  }
   // Associa le coordinate al nuovo articolo
   const pointIndex = cinqueArticles.length; // Usa un indice per le coordinate
  const point = selectedCoordinates[pointIndex];
// Ciclo per creare articoli con tutte le coordinate
    // Verifica che il punto esista
    if (!point) {
    alert("Mancano coordinate per il prossimo articolo!");
    return;
  }
  const pentagoneData = {
    name: form.querySelector("[name='name']").value,
    category: form.querySelector("[name='category']").value,
  
    latitudeSelectionee: point.lat, // Usa la latitudine del punto corrente
    longitudeSelectionee: point.lng, // Usa la longitudine del punto corrente
    type: form.querySelector("[name='type']").value,
    image: form.querySelector("[name='image']").value
  };

  // Aggiungi l'articolo all'array
  cinqueArticles.push(pentagoneData);
  console.log("Articolo aggiunto:", pentagoneData);
  console.log("Articoli totali:", cinqueArticles);

  // Controlla se sono stati aggiunti 5 articoli
  if (cinqueArticles.length === 5) {
    // Prepara i dati per l'invio al server
    const formData = new FormData();
    cinqueArticles.forEach((article, index) => {
      formData.append(`articles[${index}][name]`, article.name);
      formData.append(`articles[${index}][category]`, article.category);
 
      formData.append(`articles[${index}][latitudeSelectionee]`, article.latitudeSelectionee);
      formData.append(`articles[${index}][longitudeSelectionee]`, article.longitudeSelectionee);
      formData.append(`articles[${index}][type]`, "pentagone");
 
      formData.append(`articles[${index}][image]`, article.image);
    });

    // Invia i dati al server
    try {
      const response = await fetch("/ajoute_pentagone", { method: "POST", body: formData });

      if (response.ok) {
        alert("Tutti gli articoli aggiunti con successo!");
        window.location.reload();
      } else {
        alert("Errore nella spedizione degli articoli!");
      }
    } catch (err) {
      console.error("Errore durante l'invio:", err);
    }
  } else {
    // Messaggio per indicare quanti articoli mancano
    alert(`Articolo aggiunto. Mancano ${5 - cinqueArticles.length} articoli.`);
  }

  // Resetta il form per il prossimo articolo
  form.reset();
});

  });
</script>
<!-- Div où la carte sera affichée -->
<div id="map" style='width: 100%; height: 400px;'></div>
<div class='container'>   
  <div class="row"> 
    <div class="col-lg-6 mx-auto mt-4">

     <% if (message) { %> 
        <div class="alert alert-dismissible fade show alert-<%= message.type %>" role="alert">
          <button class="btn-close" type="button" data-bs-dismiss="alert" aria-label="Close"></button>
          <i class="fas fa-exclamation-circle me-2"></i>   
          <strong><%= message.message %></strong>     
        </div>
     <% } %>
         <div class="card shadow">
            <div class="card-header bg-primary">
             <h3 class="text-light">Add New User</h3>
            </div>
       
            <div class="card-body p-4">
                <form action="/ajoute_pentagone" method="POST" id="add-pentagone" enctype="multipart/form-data">
                    <div class="mb-3">
                        <select id="category" name="category" value="category" placeholder="Content..." >
                            <option value="bon" selected>Content</option>
                            <option value="moyen">Moyen</option>
                            <option value="bas">Pas content</option>    
                          </select><br>
                         
                        <label for="name">Name</label>
                        <input type="text" name="name" class="form-control form-control-lg" 
                        placeholder="Enter name" value="Default Name"  required />
                    </div>
                              
                    <div class="mb-3">
                        <label for="image_1" class="form-label">Image</label>
                        <input type="hidden" name="image_1" value="image_1.png" class="form-control form-control-lg" required />
                    </div>
                    <div class="mb-3">
                      <label for="image_2" class="form-label">Image</label>
                      <input type="hidden" name="image_2" value="image_2.png" class="form-control form-control-lg" required />
                  </div>
                  <div class="mb-3">
                    <label for="image_3" class="form-label">Image</label>
                    <input type="hidden" name="image_3" value="image_3.png" class="form-control form-control-lg" required />
                </div>
                <div class="mb-3">
                  <label for="image_4" class="form-label">Image</label>
                  <input type="hidden" name="image_4" value="image_4.png" class="form-control form-control-lg" required />
              </div>
              <div class="mb-3">
                <label for="image_5" class="form-label">Image</label>
                <input type="hidden" name="image_5" value="image_5.png" class="form-control form-control-lg" required />
            </div>
  <!-- Questi sono i campi hidden per ciascun articolo, legati ai punti selezionati sulla mappa -->
<input type="hidden" id="latitudeSelectioneeInput_0" name="latitudeSelectioneeInput_0">
<input type="hidden" id="longitudeSelectioneeInput_0" name="longitudeSelectioneeInput_0">

<input type="hidden" id="latitudeSelectioneeInput_1" name="latitudeSelectioneeInput_1">
<input type="hidden" id="longitudeSelectioneeInput_1" name="longitudeSelectioneeInput_1">

<input type="hidden" id="latitudeSelectioneeInput_2" name="latitudeSelectioneeInput_2">
<input type="hidden" id="longitudeSelectioneeInput_2" name="longitudeSelectioneeInput_2">

<input type="hidden" id="latitudeSelectioneeInput_3" name="latitudeSelectioneeInput_3">
<input type="hidden" id="longitudeSelectioneeInput_3" name="longitudeSelectioneeInput_3">


<input type="hidden" id="latitudeSelectioneeInput_4" name="latitudeSelectioneeInput_4">
<input type="hidden" id="longitudeSelectioneeInput_4" name="longitudeSelectioneeInput_4">


  Latitude Selectionée: <span id="latitudeSelectionee"></span>&deg;<br />
  Longitude Selectionée: <span id="longitudeSelectionee"></span>&deg;<br /> 

                    <% if (user) { %>
                      <input type="hidden" name="id" value="<%= user._id %>">
                    <% } %>
                    <input type="hidden" name="type" value="pentagone"> <!-- Assicurati che il valore sia dinamico -->
                  
                                     
                    <div class="mb-3 d-grid">                      
                        <input type="submit" name="submit" value="Add User" class="btn btn-primary btn-lg"  />
                    </div>
                </form>
            </div>
         </div>

    </div>

  </div>

</div>

    
    <!-- Script aggiuntivo per visualizzare il valore di 'type' -->
<script>
document.addEventListener("DOMContentLoaded", () => {
  // Trova l'input nascosto
  const typeInput = document.querySelector("input[name='type']");
  // Mostra il valore nella console
  console.log("Valore di 'type'dal form:", typeInput.value);

  // Visualizza il valore in un elemento della pagina (se necessario)
  const displayElement = document.getElementById("type-display");
  if (displayElement) {
    displayElement.textContent = `Tipo di articolo: ${typeInput.value}`;
  }
});
</script>
</body>


<%- include('layout/footer') %>